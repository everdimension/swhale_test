angular.module("swhale.auth_events",[]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",logoutFailed:"auth-logout-failed",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}),angular.module("swhale.auth.service",["ngStorage","swhale.auth_events","swhale.progress","swhale.session"]).config(["$httpProvider",function(t){t.interceptors.push(["$rootScope","$q","$window","$location","$localStorage",function(t,o,a,n,e){return{request:function(t){return e.token&&(t.headers.Authorization="Bearer "+e.token),t},responseError:function(t){return(401===t.status||403===t.status)&&n.path("/login"),o.reject(t)}}}])}]).service("AuthSvc",["$rootScope","$http","$localStorage","Session","Progress","AUTH_EVENTS",function(t,o,a,n,e,u){var i={};return i.login=function(i){e.startLoading("login");var r=o({method:"POST",url:"/api/auth/login",data:i}).then(function(o){if(o.data.error)throw o.data;return a.authToken=o.data.token,n.create(o.data.user),t.$broadcast(u.loginSuccess),o.data},function(o){throw t.$broadcast(u.loginFailed),o.data?o.data:o});return r["finally"](function(){e.finishLoading("login")}),r},i.logout=function(){t.$broadcast(u.logoutSuccess),delete a.authToken,n.destroy()},i.signup=function(t){e.startLoading("signup");var a=o({method:"POST",url:"/api/auth/signup",data:t}).then(function(t){if(t.data.error)throw t.data;return t.data},function(t){throw t.data?t.data:t});return a["finally"](function(){e.finishLoading("signup")}),a},i.isAuthenticated=function(){return!!a.authToken},i}]);
//# sourceMappingURL=../../../sourcemaps/auth/auth-service.js.map